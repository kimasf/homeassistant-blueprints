blueprint:
  name: "ðŸ’¡ Presence Sensor (Customizable)"
  description: "Turns off lights after a user-defined time of no motion and restores previous state."
  domain: automation
  input:
    motion_sensor:
      name: Motion Sensor
      description: "Select the motion sensor for detection."
      selector:
        entity:
          domain: binary_sensor

    lights:
      name: Lights
      description: "Select the lights to control."
      selector:
        entity:
          domain: light
          multiple: true

    scene_name:
      name: Scene Name
      description: "Enter a unique name for the scene (no spaces, use _ instead)."
      selector:
        text:

    delay_minutes:
      name: Delay (Minutes)
      description: "Minutes before turning off lights after no motion."
      default: 1
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: "min"

    delay_seconds:
      name: Delay (Seconds)
      description: "Additional seconds before turning off lights."
      default: 0
      selector:
        number:
          min: 0
          max: 59
          unit_of_measurement: "sec"

variables:
  scene_full_name: !input scene_name

trigger:
  - platform: state
    entity_id: !input motion_sensor
    to: "on"
    id: Motion_ON

  - platform: state
    entity_id: !input motion_sensor
    to: "off"
    for:
      minutes: !input delay_minutes
      seconds: !input delay_seconds
    id: Motion_OFF

action:
  - choose:
      - conditions:
          - condition: trigger
            id: Motion_OFF
          - condition: state
            entity_id: !input motion_sensor
            state: "off"
        sequence:
          - service: scene.create
            data:
              snapshot_entities: !input lights
              scene_id: "{{ scene_full_name }}"

          - service: light.turn_off
            target:
              entity_id: !input lights

      - conditions:
          - condition: trigger
            id: Motion_ON
        sequence:
          - service: scene.turn_on
            data:
              entity_id: "scene.{{ scene_full_name }}"

          - service: scene.delete
            data:
              entity_id: "scene.{{ scene_full_name }}"

mode: single
